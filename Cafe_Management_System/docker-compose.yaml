services:
  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - cafe-network
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: always

  menu-service:
    build:
      context: ./menu-services
      dockerfile: dockerfile
    container_name: menu-service
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - MONGO_URI=mongodb://mongo:27017/cafe
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - cafe-network
    restart: always

  order-service:
    build:
      context: ./order-services
      dockerfile: dockerfile
    container_name: order-service
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=production
      - MONGO_URI=mongodb://mongo:27017/cafe
      - MENU_SERVICE_URL=http://menu-service:3001
    depends_on:
      - mongo
      - menu-service
    networks:
      - cafe-network
    restart: always

  payment-service:
    build:
      context: ./payment-services
      dockerfile: dockerfile
    container_name: payment-service
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=production
      - MONGO_URI=mongodb://mongo:27017/cafe
      - ORDER_SERVICE_URL=http://order-service:3002
    depends_on:
      - mongo
      - order-service
    networks:
      - cafe-network
    restart: always

  inventory-service:
    build:
      context: ./inventory-services
      dockerfile: dockerfile
    container_name: inventory-service
    ports:
      - "3004:3004"
    environment:
      - NODE_ENV=production
      - MONGO_URI=mongodb://mongo:27017/cafe
    depends_on:
      - mongo
    networks:
      - cafe-network
    restart: always

  customer-service:
    build:
      context: ./customer-services
      dockerfile: dockerfile
    container_name: customer-service
    ports:
      - "3005:3005"
    environment:
      - NODE_ENV=production
      - MONGO_URI=mongodb://mongo:27017/cafe
    depends_on:
      - mongo
    networks:
      - cafe-network
    restart: always

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: dockerfile
    container_name: api-gateway
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - MENU_SERVICE_URL=http://menu-service:3001
      - ORDER_SERVICE_URL=http://order-service:3002
      - PAYMENT_SERVICE_URL=http://payment-service:3003
      - INVENTORY_SERVICE_URL=http://inventory-service:3004
      - CUSTOMER_SERVICE_URL=http://customer-service:3005
    depends_on:
      - menu-service
      - order-service
      - payment-service
      - inventory-service
      - customer-service
    networks:
      - cafe-network
    restart: always

networks:
  cafe-network:
    driver: bridge

volumes:
  mongo-data:
    driver: local